names(df)[1] <- 'Date'
# change "-" to " " in T..Date
df$Date <- gsub("-", " ", data, fixed=TRUE)
df <- read.csv("Data/Scan_sampling_data.csv")
df$Date <- gsub("-", " ", Date)
dat <- read.csv("Data/Scan_sampling_data.csv")
View(df)
dat <- read.csv("Data/Scan_sampling_data.csv")
#Changing "-" to " " in T..Date
dat$Date <- gsub("-", " ", data, fixed=TRUE)
#Combining date and time in a new date-time column:
dat %>%
select(Date, Time) %>%
mutate(Date_time = make_datetime(date, time))
View(dat)
dat$Date_time = dmy_hm(paste(dat$Date, dat$Time))
dat$date_time = dmy_hm(paste(dat$T..Date, '2021', dat$Time))
#Changing "-" to " " in T..Date
dat$Date <- gsub("-", " ", data, fixed=TRUE)
#Changing "-" to " " in T..Date
dat$Date <- chartr("-", " ", dat$Date)
#Combining date and time in a new date-time column:
dat$Date_time = dmy_hm(paste(dat$Date, '2021', dat$Time))
dat <- read.csv("Data/Scan_sampling_data.csv")
#Changing "-" to " " in T..Date
dat$Date <- chartr("-", " ", dat$Date)
#Combining date and time in a new date-time column:
dat$Date_time = dmy_hm(paste(dat$Date, '2021', dat$Time))
library(tidyverse)
library(dplyr)
library(lubridate)
library(RColorBrewer)
dat <- read.csv("Data/Scansample2022.csv")
#Making time/date column
dat$date_time = ymd_hm(paste(dat$Date, dat$Time))
#Filtering data by sex
dat %>%
filter(Sex == 1) -> maledf
dat %>%
filter(Sex == 0) -> femaledf
dat %>%
filter(Sex == 99) -> otherdf
unique(dat$Date)
weatherdat <- read.csv("Data/Weather_data2022.csv")
View(weatherdat)
View(weatherdat)
weatherdat <- read.csv("Data/Weather_data.csv")
View(weatherdat)
weatherdat <- read.csv("Data/Weather_data_per_hour_2022.csv")
View(otherdf)
View(otherdf)
View(weatherdat)
View(weatherdat)
summary(weatherdata)
summary(weatherdat)
names(weatherdat)[3] <- "date_time"
weatherdat$date_time <- strptime(weatherdat$date_time, "%d.%m.%Y")
weatherdat$date_time2 <- format(weatherdat$parsed, "%Y-%m-%d")
weatherdat$date_time <- strptime(weatherdat$date_time, "%d.%m.%Y %H:%M")
weatherdat$date_time2 <- format(weatherdat$parsed, "%Y-%m-%d %H:%M")
?strptime
weatherdat$date_time <- strptime(weatherdat$date_time, "%d.%m.%Y %H:%M:%S")
weatherdat$date_time2 <- format(weatherdat$parsed, "%Y-%m-%d %H:%M:%S")
weatherdat$date_time <- chartr(".","-", weatherdat$date_time)
weatherdat$date_time <- ymd_hms(weatherdat$date_time)
weatherdat <- read.csv("Data/Weather_data_per_hour_2022.csv")
weatherdat$date_time <- chartr(".","-", weatherdat$date_time)
weatherdat$date_time <- ymd_hms(weatherdat$date_time)
#Getting the weather data to have the same date/time format
names(weatherdat) [3] <- date_time
weatherdat$date_time <- chartr(".","-", weatherdat$date_time)
weatherdat$date_time <- ymd_hms(weatherdat$date_time)
#Getting the weather data to have the same date/time format
names(weatherdat) [3] <- "date_time"
weatherdat$date_time <- chartr(".","-", weatherdat$date_time)
weatherdat$date_time <- ymd_hms(weatherdat$date_time)
weatherdat <- read.csv("Data/Weather_data_per_hour_2022.csv")
#Getting the weather data to have the same date/time format
names(weatherdat) [3] <- "date_time"
weatherdat$date_time <- strptime(weatherdat$date_time, "%d.%m.%Y %H:%M")
weatherdat <- read.csv("Data/Weather_data_per_hour_2022.csv")
#Getting the weather data to have the same date/time format
names(weatherdat) [3] <- "date_time"
weatherdat$date_time <- strptime(weatherdat$date_time, "%d.%m.%Y %H:%M")
weatherdat$date_time2 <- format(weatherdat$parsed, "%Y-%m-%d %H:%M")
weatherdat <- read.csv("Data/Weather_data_per_hour_2022.csv")
#Getting the weather data to have the same date/time format
names(weatherdat) [3] <- "date_time"
weatherdat$date_time <- strptime(weatherdat$date_time, "%d.%m.%Y %H:%M")
library(tidyverse)
library(dplyr)
library(lubridate)
library(RColorBrewer)
dat <- read.csv("Data/Scansample2022.csv")
weatherdat <- read.csv("Data/Weather_data_per_hour_2022.csv")
#Making time/date column
dat$date_time = ymd_hm(paste(dat$Date, dat$Time))
#Getting the weather data to have the same date/time format
names(weatherdat) [3] <- "date_time"
weatherdat$date_time <- strptime(weatherdat$date_time, "%d.%m.%Y %H:%M")
#Filtering data by sex
dat %>%
filter(Sex == 1) -> maledf
dat %>%
filter(Sex == 0) -> femaledf
dat %>%
filter(Sex == 99) -> otherdf
hourlyfemaledf <- femaledf %>%
mutate(Time = date_time) %>%
mutate(date_time = ceiling_date(date_time, unit = "hour")) %>%
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
hourlyfemaledf
#Changing column name
#names(hourlyfemaledf) [3] <- "Resting"
names(hourlyfemaledf) <- c("date_time", "HerdID", "TotalForaging", "TotalResting",
"Total Ruminating", "TotalWalking", "TotalDisplaying",
"TotalOther")
View(hourlyfemaledf)
View(hourlyfemaledf)
View(weatherdat)
View(weatherdat)
unique(hourlyfemaledf$date_time)
weatherdat_sub <- subset(weatherdat, date ("2022-03-19" & date < "2022-03-20"))
weatherdat_sub <- subset(weatherdat, date ("2022-03-19","2022-03-20"))
weatherdat_sub <- subset(weatherdat, date ("2022-03-19"))
weatherdat_sub <- subset(weatherdat, date == ("2022-03-19"))
library(tidyverse)
hourlyfemaleweather <- merge(hourlyfemaledf,weatherdat)
View(hourlyfemaleweather)
View(hourlyfemaleweather)
weatherspecific <- weatherdat[!weatherdat$date_time %in% hourlyfemaledf$date_time, ]
View(weatherspecific)
weatherspecific <- weatherdat[weatherdat$date_time %in% hourlyfemaledf$date_time, ]
View(weatherspecific)
weatherspecific <- weatherdat[!weatherdat$date_time %in% hourlyfemaledf$date_time, ]
View(weatherspecific)
weatherspecific <- weatherdat[=weatherdat$date_time %in% hourlyfemaledf$date_time, ]
weatherspecific <- weatherdat[weatherdat$date_time %in% hourlyfemaledf$date_time, ]
View(weatherspecific)
View(weatherspecific)
weatherspecific <- weatherdat[weatherdat %in% hourlyfemaledf$date_time, ]
View(weatherspecific)
save.image("Data/ReindeerBehavior2021.RData")
save.image("Data/ReindeerBehavior2022.RData")
dat <- read.csv("Desktop/Book1.csv")
Book1 <- read.csv("C:/Users/Linnea/Desktop/Book1.csv")
View(Book1)
ggplot(Book1, mapping = aes(x=Date, y=ToA)) +
geom_line(aes(group = factor(HerdID), color = factor(HerdID)))
library(tidyverse)
ggplot(Book1, mapping = aes(x=Date, y=ToA)) +
geom_line(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(Book1, mapping = aes(x=Date, y=ToA)) +
geom_line()
library(tidyverse)
library(dplyr)
library(lubridate)
library(RColorBrewer)
dat <- read.csv("Data/Scan_sampling_data_2022.csv")
weatherdat <- read.csv("Data/Weather_data_per_hour_2022.csv")
####'*Date-time formatting*
#Making time/date column
dat$date_time = ymd_hm(paste(dat$Date, dat$Time))
#Getting the weather data to have the same date/time format
names(weatherdat) [3] <- "date_time"
weatherdat$date_time <- as.POSIXct(weatherdat$date_time, "%d.%m.%Y %H:%M", tz = "UTC")
####'*Filtering and subsetting data*
#Filtering data by sex
dat %>%
filter(Sex == 1) -> maledf
dat %>%
filter(Sex == 0) -> femaledf
dat %>%
filter(Sex == 99) -> otherdf
#Group by hour
hourlyDat <- dat %>%
mutate(Time = date_time) %>%
mutate(date_time = ceiling_date(date_time, unit = "hour")) %>%
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
hourlyfemaledf <- femaledf %>%
mutate(Time = date_time) %>%
mutate(date_time = ceiling_date(date_time, unit = "hour")) %>%
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
#Changing column names
names(weatherdat) [4] <- "SnowDepth"
names(weatherdat) [5] <- "Precipitation"
names(weatherdat) [6] <- "AirTemp"
names(weatherdat) [7] <- "MeanWindSpeed"
names(hourlyDat) <- c("date_time", "HerdID", "TotalForaging", "TotalResting",
"TotalRuminating", "TotalWalking", "TotalDisplaying",
"TotalOther")
names(hourlyfemaledf) <- c("date_time", "HerdID", "TotalForaging", "TotalResting",
"TotalRuminating", "TotalWalking", "TotalDisplaying",
"TotalOther")
#Arrange by time
arrmaledf <- maledf %>%
mutate(date_time,
hour = hour(date_time),
min = minute(date_time),
sec = second(date_time)) %>%
arrange(hour, min, sec)
unique(hourlyfemaledf$date_time)
weatherSpecificF <- subset(weatherdat, subset = date_time %in% c(unique(hourlyfemaledf$date_time)))
weatherSample <- merge(weatherFSpecific, hourlyfemaledf, by="date_time")
weatherSpecific <- subset(weatherdat, subset = date_time %in% c(unique(hourlyDat$date_time)))
complete_hourly_dat <- merge(weatherSpecific, hourlyDat, by="date_time")
#Adding a column for total amount of individuals per hour
complete_hourly_dat$TotalIndividuals = rowSums(complete_hourly_dat
[,c("TotalForaging", "TotalResting",
"TotalRuminating","TotalWalking",
"TotalDisplaying", "TotalOther")])
####'*Plotting data*
ggplot(hourlyfemaledf, mapping = aes(x=date_time, y=TotalForaging)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=date_time, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=date_time, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(weatherScanTotal, mapping = aes(x=Mean.wind.speed, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
####'*Multiple linear regression*
# Testing if weather has an effect on total individuals resting/ruminating/foraging
cor.dat <- na.omit(complete_hourly_dat)
cor.test<-data.matrix(cor.dat[c("SnowDepth","Precipitation","AirTemp",
"MeanWindSpeed","TotalResting","TotalForaging","TotalRuminating")])
cor.coef <- cor(cor.test)
cor.coef
m5 <- lm(TotalResting~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
m5 <- lm(TotalForaging~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
m5 <- lm(TotalRuminating~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
m5 <- lm(TotalDisplaying~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
m5 <- lm(TotalWalking~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
library(tidyverse)
library(dplyr)
library(lubridate)
library(RColorBrewer)
dat <- read.csv("Data/Scan_sampling_data_2022.csv")
weatherdat <- read.csv("Data/Weather_data_per_hour_2022.csv")
####'*Date-time formatting*
#Making time/date column
dat$date_time = ymd_hm(paste(dat$Date, dat$Time))
#Getting the weather data to have the same date/time format
names(weatherdat) [3] <- "date_time"
weatherdat$date_time <- as.POSIXct(weatherdat$date_time, "%d.%m.%Y %H:%M", tz = "UTC")
####'*Filtering and subsetting data*
#Filtering data by sex
dat %>%
filter(Sex == 1) -> maledf
dat %>%
filter(Sex == 0) -> femaledf
dat %>%
filter(Sex == 99) -> otherdf
#Group by hour
hourlyDat <- dat %>%
mutate(Time = date_time) %>%
mutate(date_time = ceiling_date(date_time, unit = "hour")) %>%
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
hourlyfemaledf <- femaledf %>%
mutate(Time = date_time) %>%
mutate(date_time = ceiling_date(date_time, unit = "hour")) %>%
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
#Changing column names
names(weatherdat) [4] <- "SnowDepth"
names(weatherdat) [5] <- "Precipitation"
names(weatherdat) [6] <- "AirTemp"
names(weatherdat) [7] <- "MeanWindSpeed"
names(hourlyDat) <- c("date_time", "HerdID", "TotalForaging", "TotalResting",
"TotalRuminating", "TotalWalking", "TotalDisplaying",
"TotalOther")
names(hourlyfemaledf) <- c("date_time", "HerdID", "TotalForaging", "TotalResting",
"TotalRuminating", "TotalWalking", "TotalDisplaying",
"TotalOther")
#Arrange by time
arrmaledf <- maledf %>%
mutate(date_time,
hour = hour(date_time),
min = minute(date_time),
sec = second(date_time)) %>%
arrange(hour, min, sec)
unique(hourlyfemaledf$date_time)
weatherSpecificF <- subset(weatherdat, subset = date_time %in% c(unique(hourlyfemaledf$date_time)))
weatherSample <- merge(weatherFSpecific, hourlyfemaledf, by="date_time")
weatherSpecific <- subset(weatherdat, subset = date_time %in% c(unique(hourlyDat$date_time)))
complete_hourly_dat <- merge(weatherSpecific, hourlyDat, by="date_time")
#Adding a column for total amount of individuals per hour
complete_hourly_dat$TotalIndividuals = rowSums(complete_hourly_dat
[,c("TotalForaging", "TotalResting",
"TotalRuminating","TotalWalking",
"TotalDisplaying", "TotalOther")])
####'*Plotting data*
ggplot(hourlyfemaledf, mapping = aes(x=date_time, y=TotalForaging)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=date_time, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=date_time, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(weatherScanTotal, mapping = aes(x=Mean.wind.speed, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
####'*Multiple linear regression*
# Testing if weather has an effect on total individuals resting/ruminating/foraging
cor.dat <- na.omit(complete_hourly_dat)
cor.test<-data.matrix(cor.dat[c("SnowDepth","Precipitation","AirTemp",
"MeanWindSpeed","TotalResting","TotalForaging","TotalRuminating")])
cor.coef <- cor(cor.test)
cor.coef <- cor(cor.test)
cor.coef
m5 <- lm(TotalForaging~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
m5 <- lm(TotalResting~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
m5 <- lm(TotalRuminating~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
m5 <- lm(TotalRuminating~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
cor.coef <- cor(cor.test)
cor.coef
m5 <- lm(TotalRuminating~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
plot(m5)
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
groupedDat <- dat %>%
mutate(Time = date_time) %>%
mutate(date_time = date_time) %>%
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
View(groupedDat)
View(maledf)
####'*Plotting data*
ggplot(hourlyfemaledf, mapping = aes(x=date_time, y=TotalForaging)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=date_time, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(weatherScanTotal, mapping = aes(x=Mean.wind.speed, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=Mean.wind.speed, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=MeanWindSpeed, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
m5 <- lm(TotalRuminating~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
library(irr)
install.packages(lpSolve)
install.packages("lpSolve")
install.packages("lpSolve")
library(irr)
library(tidyverse)
library(dplyr)
library(lubridate)
library(RColorBrewer)
library(irr)
dat <- read.csv("Data/Scan_sampling_data_2022.csv")
weatherdat <- read.csv("Data/Weather_data_per_hour_2022.csv")
####'*Date-time formatting*
#Making time/date column
dat$date_time = ymd_hm(paste(dat$Date, dat$Time))
#Getting the weather data to have the same date/time format
names(weatherdat) [3] <- "date_time"
weatherdat$date_time <- as.POSIXct(weatherdat$date_time, "%d.%m.%Y %H:%M", tz = "UTC")
##Filter by sex ----
dat %>%
filter(Sex == 1) -> maledf
dat %>%
filter(Sex == 0) -> femaledf
dat %>%
filter(Sex == 99) -> otherdf
##Group by hour + summarize ----
hourlyDat <- dat %>%
mutate(Time = date_time) %>%
mutate(date_time = ceiling_date(date_time, unit = "hour")) %>%
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
groupedDat <- dat %>%
mutate(Time = date_time) %>%
mutate(date_time = date_time) %>%
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
hourlyfemaledf <- femaledf %>%
mutate(Time = date_time) %>%
mutate(date_time = ceiling_date(date_time, unit = "hour")) %>%
group_by(date_time, HerdID) %>%
summarise(`sum(Foraging[Foraging > 0])` = sum(Foraging[Foraging > 0]),
`sum(Resting)` = sum(Resting),
`sum(Ruminating)` = sum(Ruminating),
`sum(Walking)` = sum(Walking),
`sum(Displaying)` = sum(Displaying),
`sum(Other)` = sum(Other)) %>%
ungroup()
#Changing column names
names(weatherdat) [4] <- "SnowDepth"
names(weatherdat) [5] <- "Precipitation"
names(weatherdat) [6] <- "AirTemp"
names(weatherdat) [7] <- "MeanWindSpeed"
names(hourlyDat) <- c("date_time", "HerdID", "TotalForaging", "TotalResting",
"TotalRuminating", "TotalWalking", "TotalDisplaying",
"TotalOther")
names(hourlyfemaledf) <- c("date_time", "HerdID", "TotalForaging", "TotalResting",
"TotalRuminating", "TotalWalking", "TotalDisplaying",
"TotalOther")
#Arrange by time
arrmaledf <- maledf %>%
mutate(date_time,
hour = hour(date_time),
min = minute(date_time),
sec = second(date_time)) %>%
arrange(hour, min, sec)
unique(hourlyfemaledf$date_time)
weatherSpecificF <- subset(weatherdat, subset = date_time %in% c(unique(hourlyfemaledf$date_time)))
weatherSample <- merge(weatherFSpecific, hourlyfemaledf, by="date_time")
weatherSpecific <- subset(weatherdat, subset = date_time %in% c(unique(hourlyDat$date_time)))
complete_hourly_dat <- merge(weatherSpecific, hourlyDat, by="date_time")
#Adding a column for total amount of individuals per hour
complete_hourly_dat$TotalIndividuals = rowSums(complete_hourly_dat
[,c("TotalForaging", "TotalResting",
"TotalRuminating","TotalWalking",
"TotalDisplaying", "TotalOther")])
# Plotting data -----------------------------------------------------------
## Time budgets -----------
ggplot(hourlyfemaledf, mapping = aes(x=date_time, y=TotalForaging)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=date_time, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=date_time, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
ggplot(complete_hourly_dat, mapping = aes(x=MeanWindSpeed, y=TotalResting)) +
geom_point(aes(group = factor(HerdID), color = factor(HerdID)))
####'*Multiple linear regression*
# Testing if weather has an effect on total individuals resting/ruminating/foraging
cor.dat <- na.omit(complete_hourly_dat)
cor.test<-data.matrix(cor.dat[c("SnowDepth","Precipitation","AirTemp",
"MeanWindSpeed","TotalResting","TotalForaging","TotalRuminating")])
cor.coef <- cor(cor.test)
cor.coef
m5 <- lm(TotalRuminating~SnowDepth+Precipitation+AirTemp
+MeanWindSpeed, data=complete_hourly_dat)
summary(m5)
plot(m5)
kappam.fleiss(complete_hourly_dat, exact = FALSE, detail = FALSE)
